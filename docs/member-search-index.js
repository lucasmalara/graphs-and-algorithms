memberSearchIndex = [{"p":"com.graphs.struct","c":"Graph","l":"addNewVertex(int)"},{"p":"com.graphs.struct","c":"Graph","l":"addNewVertices(Collection<Integer>)","u":"addNewVertices(java.util.Collection)"},{"p":"com.graphs","c":"GraphTester","l":"ALLOW"},{"p":"com.graphs.struct","c":"Graph","l":"areVerticesOfGraph(Collection<Integer>)","u":"areVerticesOfGraph(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"AVAILABLE_FILES"},{"p":"com.graphs.utils","c":"GraphRunner","l":"BIPARTITE"},{"p":"<Unnamed>","c":"GraphUnitTest.BipartiteGraphUnitTest","l":"BipartiteGraphUnitTest()","u":"%3Cinit%3E()"},{"p":"com.graphs.struct","c":"Graph","l":"breadthFirstSearch(Collection<Graph.Vertex>)","u":"breadthFirstSearch(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"canBeMappedToComplete()"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"canConnectWith(Graph.Vertex)","u":"canConnectWith(com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"canDisconnectWith(Graph.Vertex)","u":"canDisconnectWith(com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph","l":"complete(int, int)","u":"complete(int,int)"},{"p":"<Unnamed>","c":"GraphUnitTest.CompleteGraphUnitTest","l":"CompleteGraphUnitTest()","u":"%3Cinit%3E()"},{"p":"com.graphs.struct","c":"Graph","l":"computeMCDS()"},{"p":"com.graphs.struct","c":"Graph","l":"computeMDS()"},{"p":"com.graphs.struct","c":"Graph","l":"computeMIS()"},{"p":"com.graphs.struct","c":"Graph","l":"connectVertices(int, int)","u":"connectVertices(int,int)"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"connectWith(Graph.Vertex)","u":"connectWith(com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph","l":"depthFirstSearch(Collection<Graph.Vertex>)","u":"depthFirstSearch(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"disconnectVertices(int, int)","u":"disconnectVertices(int,int)"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"disconnectWith(Graph.Vertex)","u":"disconnectWith(com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph","l":"doInduceBipartiteSubGraph(Collection<Integer>)","u":"doInduceBipartiteSubGraph(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"doInduceConnectedSubGraph(Collection<Integer>)","u":"doInduceConnectedSubGraph(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"doInducePatternMessage(boolean, String)","u":"doInducePatternMessage(boolean,java.lang.String)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"EmptyGraphUnitTest()","u":"%3Cinit%3E()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"findAvailableFiles()"},{"p":"com.graphs.struct","c":"Graph","l":"findMCDS()"},{"p":"com.graphs.struct","c":"Graph","l":"findMDS()"},{"p":"com.graphs.struct","c":"Graph","l":"findMIS()"},{"p":"com.graphs.struct","c":"Graph","l":"generateCompleteIfEmpty(int, int)","u":"generateCompleteIfEmpty(int,int)"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"getDegree()"},{"p":"com.graphs.struct","c":"Graph","l":"getVertex(int)"},{"p":"com.graphs.struct","c":"Graph","l":"getVertexNeighbourhood(int)"},{"p":"com.graphs.struct","c":"Graph","l":"getVertices()"},{"p":"<Unnamed>","c":"GraphUnitTest.BipartiteGraphUnitTest","l":"givenBipartiteGraph_WhenIsBipartite_ThenReturnTrue()"},{"p":"<Unnamed>","c":"GraphUnitTest.BipartiteGraphUnitTest","l":"givenBipartiteGraph_WhenIsEmpty_ThenReturnFalse()"},{"p":"<Unnamed>","c":"GraphUnitTest.CompleteGraphUnitTest","l":"givenCompleteGraph_WhenIsComplete_ThenReturnTrue(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenEmptyGraph_WhenComputingMCDS_ThenReturnSizeOfComputedSet()"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenEmptyGraph_WhenComputingMDS_ThenReturnSizeOfComputedSet()"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenEmptyGraph_WhenComputingMIS_ThenReturnSizeOfComputedSet()"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenEmptyGraph_WhenIsEmpty_ThenReturnTrue()"},{"p":"<Unnamed>","c":"GraphUnitTest.BipartiteGraphUnitTest","l":"givenFile_WhenInitGraph_ThenSetBipartite()"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenFile_WhenInitGraph_ThenSetNonEmpty()"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenFile_WhenIsVertexOfGraph_ThenReturnTrue(int, int)","u":"givenFile_WhenIsVertexOfGraph_ThenReturnTrue(int,int)"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenGraph_WhenIsConnected_ThenReturnTrue()"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenNegativeIndex_WhenAddVertex_ThenThrowNegativeVertexIndexException(int)"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenNegativeIndex_WhenIsVertexOfGraph_ThenThrowNegativeVertexIndexException(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenNumberOfVertices_WhenAddVerticesToEmptyGraph_ThenReturnTrue(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenPositiveIndex_WhenAddVertexToEmptyGraph_ThenReturnTrue(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenPositiveIndex_WhenConnectVerticesInEmptyGraph_ThenThrowNoSuchVertexIndexException(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenPositiveIndex_WhenDisconnectVerticesInEmptyGraph_ThenThrowNoSuchVertexIndexException(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenPositiveIndex_WhenIsVertexOfEmptyGraph_ThenReturnFalse(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"givenPositiveIndex_WhenRemoveVertexFromEmptyGraph_ThenReturnFalse(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.CompleteGraphUnitTest","l":"givenPositiveNumberOfVertices_WhenComputingMCDSInCompleteGraph_ThenReturnSizeOfComputedSet(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.CompleteGraphUnitTest","l":"givenPositiveNumberOfVertices_WhenComputingMDSInCompleteGraph_ThenReturnSizeOfComputedSet(int)"},{"p":"<Unnamed>","c":"GraphUnitTest.CompleteGraphUnitTest","l":"givenPositiveNumberOfVertices_WhenComputingMISInCompleteGraph_ThenReturnSizeOfComputedSet(int)"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"givenUnmodifiableSetOfVertices_WhenAddVertex_ThenThrowUnsupportedOperationException()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"graph"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"graph"},{"p":"com.graphs.utils","c":"GraphRunner","l":"GRAPH_EXAMPLE"},{"p":"com.graphs.struct","c":"Graph","l":"Graph(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"GraphRunner()","u":"%3Cinit%3E()"},{"p":"com.graphs","c":"GraphTester","l":"GraphTester()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"GraphUnitTest()","u":"%3Cinit%3E()"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"index"},{"p":"com.graphs.utils","c":"GraphRunner","l":"initRun()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"initRunExceptions()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"IO_EXC_MSG"},{"p":"com.graphs.utils","c":"GraphRunner","l":"IS"},{"p":"com.graphs.utils","c":"GraphRunner","l":"IS_NOT"},{"p":"com.graphs.struct","c":"Graph","l":"isBipartite()"},{"p":"com.graphs.struct","c":"Graph","l":"isBipartiteSubGraph(Collection<Graph.Vertex>)","u":"isBipartiteSubGraph(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"isCDS(Collection<Integer>)","u":"isCDS(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"isComplete()"},{"p":"com.graphs.struct","c":"Graph","l":"isConnected()"},{"p":"com.graphs.struct","c":"Graph","l":"isConnectedSubGraph(Collection<Graph.Vertex>)","u":"isConnectedSubGraph(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"isConnectedWith(Graph.Vertex)","u":"isConnectedWith(com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph","l":"isIndependentSet(Collection<Integer>)","u":"isIndependentSet(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"isInSubsetNotVisited(Collection<Graph.Vertex>, Graph.Vertex, HashSet<Graph.Vertex>)","u":"isInSubsetNotVisited(java.util.Collection,com.graphs.struct.Graph.Vertex,java.util.HashSet)"},{"p":"com.graphs.struct","c":"Graph","l":"isVertexOfGraph(int)"},{"p":"com.graphs.struct","c":"Graph","l":"isVertexOfSubGraph(Collection<Graph.Vertex>, Graph.Vertex)","u":"isVertexOfSubGraph(java.util.Collection,com.graphs.struct.Graph.Vertex)"},{"p":"com.graphs.struct","c":"Graph","l":"isVertexOfSubGraph(Collection<Graph.Vertex>, int)","u":"isVertexOfSubGraph(java.util.Collection,int)"},{"p":"com.graphs.struct","c":"Graph","l":"itsVertices"},{"p":"com.graphs","c":"GraphTester","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.graphs.struct","c":"Graph","l":"mapIndexesToVertices(Collection<Integer>)","u":"mapIndexesToVertices(java.util.Collection)"},{"p":"com.graphs.struct","c":"Graph","l":"mapToComplete()"},{"p":"com.graphs.struct","c":"Graph","l":"mapVerticesToIndexes(Collection<Graph.Vertex>)","u":"mapVerticesToIndexes(java.util.Collection)"},{"p":"com.graphs.exceptions.vertex","c":"NegativeVertexIndexException","l":"NegativeVertexIndexException()","u":"%3Cinit%3E()"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"neighbours"},{"p":"com.graphs.exceptions.vertex","c":"NoSuchVertexIndexException","l":"NoSuchVertexIndexException(int)","u":"%3Cinit%3E(int)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"NUMBER_FORMAT_EXC_MSG"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"positiveIndexesExampleProvider()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printConditionalMessage(boolean, String, String, String)","u":"printConditionalMessage(boolean,java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printDoInduceBipartiteSubGraph(Collection<Integer>)","u":"printDoInduceBipartiteSubGraph(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printDoInduceConnectedSubGraph(Collection<Integer>)","u":"printDoInduceConnectedSubGraph(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printGraph()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printGraphComplete()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIfVerticesAdded(Collection<Integer>)","u":"printIfVerticesAdded(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIfVerticesConnected(int, int)","u":"printIfVerticesConnected(int,int)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIfVerticesDisconnected(int, int)","u":"printIfVerticesDisconnected(int,int)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIfVerticesRemoved(Collection<Integer>)","u":"printIfVerticesRemoved(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIsBipartite()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIsConnectedDominatingSet(Collection<Integer>)","u":"printIsConnectedDominatingSet(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printIsIndependentSet(Collection<Integer>)","u":"printIsIndependentSet(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printMCDS()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printMDS()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printMIS()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"printSeparator()"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"random"},{"p":"com.graphs.struct","c":"Graph","l":"removeVertex(int)"},{"p":"com.graphs.struct","c":"Graph","l":"removeVertices(Collection<Integer>)","u":"removeVertices(java.util.Collection)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"RESOURCES_PATH"},{"p":"<Unnamed>","c":"GraphUnitTest","l":"RESOURCES_PATH"},{"p":"com.graphs.utils","c":"GraphRunner","l":"run(boolean)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"SEPARATOR"},{"p":"com.graphs.utils","c":"GraphRunner","l":"setGraphFromFile(String)","u":"setGraphFromFile(java.lang.String)"},{"p":"com.graphs.utils","c":"GraphRunner","l":"setGraphToEmpty()"},{"p":"com.graphs.struct","c":"Graph","l":"toString()"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"toString()"},{"p":"com.graphs.utils","c":"GraphRunner","l":"TRICKY_FILE_NAME"},{"p":"com.graphs.struct","c":"Graph.Vertex","l":"Vertex(int)","u":"%3Cinit%3E(int)"},{"p":"com.graphs.exceptions.vertex","c":"VertexIndexException","l":"VertexIndexException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"<Unnamed>","c":"GraphUnitTest.EmptyGraphUnitTest","l":"whenInitGraph_ThenSetEmpty()"}];updateSearchResults();